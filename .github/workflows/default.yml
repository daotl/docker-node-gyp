name: default
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'
  pull_request:
    branches:
      - '**'
  workflow_dispatch: {}

env:
  REPOSITORY: daotl/node-gyp
  VERSION: 9.0.0

jobs:
  node-gyp:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        context: [
          # {
          #   dockerfile: Dockerfile,
          #   flavor: node-lts,
          #   os: alpine
          # },
          {
            nodejsVersion: 20,
            dockerfile: Dockerfile,
            flavor: node-20,
            os: alpine
          },
          {
            nodejsVersion: 20,
            dockerfile: Dockerfile.root,
            flavor: node-20-root,
            os: alpine
          },
          {
            nodejsVersion: 20,
            dockerfile: Dockerfile.git,
            flavor: node-20-git,
            os: alpine
          },
          {
            nodejsVersion: 20,
            dockerfile: Dockerfile.root-git,
            flavor: node-20-root-git,
            os: alpine
          },
          {
            nodejsVersion: 20,
            dockerfile: Dockerfile.root-git-pnpm-turborepo,
            flavor: node-20-root-git-pnpm-turborepo,
            os: alpine
          },
          {
            nodejsVersion: 19,
            dockerfile: Dockerfile,
            flavor: node-19,
            os: alpine
          },
          {
            nodejsVersion: 19,
            dockerfile: Dockerfile.root,
            flavor: node-19-root,
            os: alpine
          },
          {
            nodejsVersion: 19,
            dockerfile: Dockerfile.git,
            flavor: node-19-git,
            os: alpine
          },
          {
            nodejsVersion: 19,
            dockerfile: Dockerfile.root-git,
            flavor: node-19-root-git,
            os: alpine
          },
          {
            nodejsVersion: 19,
            dockerfile: Dockerfile.root-git-pnpm-turborepo,
            flavor: node-19-root-git-pnpm-turborepo,
            os: alpine
          },
          {
            nodejsVersion: 18,
            dockerfile: Dockerfile,
            flavor: node-18,
            os: alpine
          },
          {
            nodejsVersion: 18,
            dockerfile: Dockerfile.root,
            flavor: node-18-root,
            os: alpine
          },
          {
            nodejsVersion: 18,
            dockerfile: Dockerfile.git,
            flavor: node-18-git,
            os: alpine
          },
          {
            nodejsVersion: 18,
            dockerfile: Dockerfile.root-git,
            flavor: node-18-root-git,
            os: alpine
          },
          {
            nodejsVersion: 18,
            dockerfile: Dockerfile.root-git-pnpm-turborepo,
            flavor: node-18-root-git-pnpm-turborepo,
            os: alpine
          },
          # {
          #   nodejsVersion: 14,
          #   dockerfile: Dockerfile.node,
          #   flavor: node-14,
          #   os: alpine
          # },
          # {
          #   nodejsVersion: 12,
          #   dockerfile: Dockerfile.node,
          #   flavor: node-12,
          #   os: alpine
          # }
        ]

    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Build the Docker image
        run: >
          docker build . --no-cache --pull
          -f ${{ matrix.context.dockerfile }}
          -t ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}
          -t ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}-${{ matrix.context.os }}
          -t ${{ env.REPOSITORY }}:latest-${{ matrix.context.flavor }}
          -t ${{ env.REPOSITORY }}:latest-${{ matrix.context.flavor }}-${{ matrix.context.os }}
          --build-arg NODEJS_VERSION=${{ matrix.context.nodejsVersion }}
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          --build-arg VERSION=${{ env.VERSION }}
          --build-arg VCS_REF=${{ github.sha }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish the Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}
          docker push ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}-${{ matrix.context.os }}
          docker push ${{ env.REPOSITORY }}:latest-${{ matrix.context.flavor }}

      - name: Publish the Docker image (Latest)
        if: ${{ github.event_name != 'pull_request' && matrix.context.dockerfile == 'Dockerfile' }}
        run: |
          docker tag ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}-${{ matrix.context.os }} ${{ env.REPOSITORY }}:${{ env.VERSION }}
          docker tag ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }}-${{ matrix.context.os }} ${{ env.REPOSITORY }}:latest-${{ matrix.context.os }}
          docker tag ${{ env.REPOSITORY }}:${{ env.VERSION }}-${{ matrix.context.flavor }} ${{ env.REPOSITORY }}:latest
          docker push ${{ env.REPOSITORY }}:${{ env.VERSION }}
          docker push ${{ env.REPOSITORY }}:latest-${{ matrix.context.os }}
          docker push ${{ env.REPOSITORY }}:latest
